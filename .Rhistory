library(tidyverse)
library(patchwork)
finch.data <- read.csv("zebrafinches.csv")
View(finch.data)
close.t.stat <- t.test(x=finch.data$further, mu = 0, alternative = "greater")
close.t.stat
View(close.t.stat)
t.stat <- close.t.stat$statistic
further.sum <- finch.data |>
summarize(
mean = mean(further),
sd = sd(further),
skew = skewness(further)
)
further.sum <- finch.data |>
summarize(
mean = mean(further),
sd = sd(further),
skew = skew(further)
)
library(e1071)
further.sum <- finch.data |>
summarize(
mean = mean(further),
sd = sd(further),
skew = skewness(further)
)
t.pdf <- dnorm(x=finch.data$further, mean = further.sum$mean, sd = further.sum$sd)
n = length(finch.data)
error.val <- ((further.sum$skew)/(sqrt(n)))*(((2*t.stat^2)+1)/6)*t.pdf
fZ.at.t <- dnorm(t.stat, mean = 0, sd = 1)
n = nrow(finch.data)
close.t.stat <- t.test(x=finch.data$further, mu = 0, alternative = "less")
t.stat <- close.t.stat$statistic
fZ.at.t <- dnorm(t.stat, mean = 0, sd = 1)
error.val <- ((further.sum$skew)/(sqrt(n)))*(((2*t.stat^2)+1)/6)*fZ.at.t
skew.further <- further.sum$skew
t.seq <- seq(-10, 10, length.out=1000)
error.seq <- (skew.further / sqrt(n)) *
((2 * t.seq^2 + 1) / 6) *
fZ
fZ <- dnorm(t.seq, mean = 0, sd = 1)
error.seq <- (skew.further / sqrt(n)) *
((2 * t.seq^2 + 1) / 6) *
fZ
error.df <- tibble(
t     = t.seq,
error = error.seq
)
error.plot <- ggplot(error.df, aes(x = t, y = error)) +
geom_line(size = 1) +
labs(
title = "Edgeworth Approximation Error vs. t",
x     = "t statistic",
y     = "Approximation Error"
) +
theme_minimal()
error.plot
View(further.sum)
alpha = 0.05
assumed.t <- abs(qnorm(alpha))
assumed.fz <- dnorm(assumed.t)
tail.prob <- (((skew.further)/6*(0.10*alpha))*((2*assumed.t^2)+1)*assumed.fz)^2
closer       <- finch.data$closer
n.closer <- length(closer)        # or nrow(finch.data)
s.closer <- sd(closer)
resamples.null.closer <- replicate(R, {
x.bar <- sample(closer.null, size = n.closer, replace = TRUE)
mean(x.bar)/(s.closer/sqrt(n.closer))
})
R = 10000
set.seed(42)
resamples.null.closer <- replicate(R, {
x.bar <- sample(closer.null, size = n.closer, replace = TRUE)
mean(x.bar)/(s.closer/sqrt(n.closer))
})
closer.null  <- closer - mean(closer)
resamples.null.closer <- replicate(R, {
x.bar <- sample(closer.null, size = n.closer, replace = TRUE)
mean(x.bar)/(s.closer/sqrt(n.closer))
})
difference <- further - closer
further <- finch.data$further
difference <- further - closer
n.further = length(further)
n.diff = length(difference)
n.further = length(further)
n.diff = length(difference)
further.null = further - mean(further)
diff.null = difference - mean(difference)
sd.further = sd(further)
sd.diff = sd(difference)
p_closer_boot <- mean(
abs(resamples.null.closer) >= abs(t_closer)
)
t_closer    <- t.test(closer, mu = 0, alternative = "less")$statistic
p_closer_tt <- t.test(closer, mu = 0, alternative = "less")$p.value
t_further    <- t.test(further, mu = 0, alternative = "less")$statistic
p_further_tt <- t.test(further, mu = 0, alternative = "less")$p.value
t_diff      <- t.test(difference, mu = 0, alternative = "less")$statistic
p_diff_tt   <- t.test(difference, mu = 0, alternative = "less")$p.value
p_closer_boot <- mean(
abs(resamples.null.closer) >= abs(t_closer)
)
p_closer_boot
library(tidyverse)
library(patchwork)
library(e1071)
finch.data <- read.csv("zebrafinches.csv")
n = nrow(finch.data)
further.sum <- finch.data |>
summarize(
mean = mean(further),
sd = sd(further),
skew = skewness(further)
)
close.t.stat <- t.test(x=finch.data$further, mu = 0, alternative = "less")
t.stat <- close.t.stat$statistic
fZ.at.t <- dnorm(t.stat, mean = 0, sd = 1)
error.val <- ((further.sum$skew)/(sqrt(n)))*(((2*t.stat^2)+1)/6)*fZ.at.t
t.seq <- seq(-10, 10, length.out=1000)
fZ <- dnorm(t.seq, mean = 0, sd = 1)
skew.further <- further.sum$skew
# Edgeworth error
error.seq <- (skew.further / sqrt(n)) *
((2 * t.seq^2 + 1) / 6) *
fZ
error.df <- tibble(
t     = t.seq,
error = error.seq
)
closer <- finch.data$closer
n.closer <- length(closer)
s.closer <- sd(closer)
closer.null  <- closer - mean(closer)
R = 10000
set.seed(42)
#Generate null bootstrap T-stats
resamples.null.closer <- replicate(R, {
x.bar <- sample(closer.null, size = n.closer, replace = TRUE)
mean(x.bar)/(s.closer/sqrt(n.closer))
})
further <- finch.data$further
difference <- further - closer
# observed Tâ€‘statistics
t_closer    <- t.test(closer, mu = 0, alternative = "less")$statistic
p_closer_tt <- t.test(closer, mu = 0, alternative = "less")$p.value
t_further    <- t.test(further, mu = 0, alternative = "less")$statistic
p_further_tt <- t.test(further, mu = 0, alternative = "less")$p.value
t_diff      <- t.test(difference, mu = 0, alternative = "less")$statistic
p_diff_tt   <- t.test(difference, mu = 0, alternative = "less")$p.value
n.further = length(further)
n.diff = length(difference)
further.null = further - mean(further)
diff.null = difference - mean(difference)
sd.further = sd(further)
sd.diff = sd(difference)
resamples.null.further <- replicate(R, {
x.bar <- sample(further.null, size = n.further, replace = TRUE)
mean(x.bar)/(sd.further/sqrt(n.further))
})
resamples.null.diff <- replicate(R, {
x.bar <- sample(diff.null, size = n.diff, replace = TRUE)
mean(x.bar)/(sd.diff/sqrt(n.diff))
})
p_closer_boot  <- mean(resamples.null.closer  <= t_closer)
p_further_boot <- mean(resamples.null.further <= t_further)
p_diff_boot    <- mean(resamples.null.diff    <= t_diff)
p_closer_boot  <- mean(abs(resamples.null.closer)  >= abs(t_closer))
p_further_boot <- mean(abs(resamples.null.further) >= abs(t_further))
p_diff_boot    <- mean(abs(resamples.null.diff)    >= abs(t_diff))
#Part 2c:
install.packages("BCA")
install.packages("bootbca")
error.plot <- ggplot(error.df, aes(x = t, y = error)) +
geom_line(size = 1) +
labs(
title = "Edgeworth Approximation Error vs. t",
x     = "t statistic",
y     = "Approximation Error"
) +
theme_minimal()
error.plot
closer <- finch.data$closer
n.closer <- length(closer)
s.closer <- sd(closer)
mu.obs      <- mean(closer)
resamples.null.closer <- replicate(R, {
x.star   <- sample(closer, size = n.closer, replace = TRUE)
mu <- mean(x.star)
sd <- sd(x.star)
x.star0  <- x.star - mu.obs
x.star0 / (sd / sqrt(n.closer))
})
View(resamples.null.closer)
resamples.null.closer <- replicate(R, {
x.star   <- sample(closer, size = n.closer, replace = TRUE)
mu <- mean(x.star)
sd <- sd(x.star)
x.star0  <- x.star - mu.obs
x.star0 / (sd / sqrt(n.closer))
})
R = 1000
set.seed(42)
resamples.null.closer <- replicate(R, {
x.star   <- sample(closer, size = n.closer, replace = TRUE)
mu <- mean(x.star)
sd <- sd(x.star)
x.star0  <- x.star - mu.obs
x.star0 / (sd / sqrt(n.closer))
})
View(resamples.null.closer)
closer.resamples <- tibble(xbar = rep(NA, R), sd = rep(NA, R), t.stat = rep(NA, R))
for (i in 1:R) {
x.star   <- sample(closer, size = n.closer, replace = TRUE)
closer.resamples$xbar[i] <- mean(x.star)
closer.resamples$sd[i] <- sd(x.star)
closer.resamples$t.stat[i] (closer.resamples$xbar[i]-mu.obs) / (closer.resamples$sd[i] / sqrt(n.closer))
}
for (i in 1:R) {
x.star   <- sample(closer, size = n.closer, replace = TRUE)
closer.resamples$xbar[i] <- mean(x.star)
closer.resamples$sd[i] <- sd(x.star)
closer.resamples$t.stat[i] <- (closer.resamples$xbar[i]-mu.obs) / (closer.resamples$sd[i] / sqrt(n.closer))
}
